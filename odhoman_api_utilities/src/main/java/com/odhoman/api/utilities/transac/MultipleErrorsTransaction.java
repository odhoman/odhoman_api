package com.odhoman.api.utilities.transac;

import java.util.ArrayList;
import java.util.List;

/**
 * Maneja transacciones que pueden tener multiples errores
 * @author Emilio G. Mï¿½ller (em06297)
 * @date Jul 18, 2008
 *
 */
public class MultipleErrorsTransaction extends AbstractTransaction {

	/**
	 * Autogenerated UID
	 */
	private static final long serialVersionUID = -514383605249536718L;
	private final int MAX_ERROR_Q = 50;

	public Long cantErrores = 0L;
	public List<ErrorCode> errores = null;

	public MultipleErrorsTransaction() {
		super();
		errores = new ArrayList<ErrorCode>();
		setMdInfo();
	}
	
	private void setMdInfo() {
		setFieldInfo("cantErrores", "Long", 3);
		setFieldInfo("errores", "Collection", getMaxErrorQ(), "cantErrores", "com.citi.common.util.transac.ErrorCode");
	}
	
	
	protected int getMaxErrorQ() {
		return MAX_ERROR_Q;
	}
	
	/**
	 * @return the cantErrores
	 */
	public Long getCantErrores() {
		return cantErrores;
	}

	/**
	 * @param cantErrores
	 *            the cantErrores to set
	 */
	public void setCantErrores(Long cantErrores) {
		this.cantErrores = cantErrores;
	}

	/**
	 * @return the errores
	 */
	public List<ErrorCode> getErrores() {
		return errores;
	}

	/**
	 * @param errores
	 *            the errores to set
	 */
	public void setErrores(List<ErrorCode> errores) {
		this.errores = errores;
	}

	public TransactionStatus getTransactionStatus() {
		return new TransactionStatusImpl(OK.equals(getOkFlag()), getErrores());
	}

}
